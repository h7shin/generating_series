
""" 
Notice

this module should not be altered unless one wishes to:

* test the algorithm at some fixed number of map nodes
  uncomment line that contains compute(lst,n,'test')
* test run time at different input sizes
  uncomment the for-loop block under __name__ == '__main__'

All neccessary parameters is customizable in client.py

client must provide in client.py the following:

* a method that generates a list using create_lst(), empty list is okay
* a method that specifies the number of map nodes 
  defined as get_num_map_nodes(size_param)
  and size_param is an input size parameter the client can use
  to adjust number of map nodes
* a weight method, w(input), that takes the element
  of the given list and returns an integer or float
  see (map.py) to see how the weight method is used
* a substitute method, x(), which returns an integer
  or float to replace the variable x in the series

About the Module
  
compute(lst) computes the sum of the generating series
for a set of elements (lst) implemented as a Python list with respect
to weight function w() (to be defined in client.py).

optional paramers:
    size_param      used to determine appropriate number of map nodes
    option          'not_fixed' or 'fixed' 
                    where
                        'fixed' tells compute() to
                        keep number of map nodes at some default values
                        to be defined in the client module
                        
                        'not_fixed' will 

lst may be a list of any type (integer, list, etc), as long as
it is consistent in the implementation of w()

User may also provide a parameter for n which can be
used to set number of map nodes

"""